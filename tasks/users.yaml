---

- name: Check if user "{{ item.id }}" already exist
  uri:
    url: "{{ api_protocol }}://{{ ansible_host }}:{{ api_port }}/service/rest/v1/security/users"
    user: "{{ admin_username }}"
    password: "{{ admin_password }}"
    method: GET
    status_code: 200
    force_basic_auth: true
  delegate_to: localhost
  run_once: true
  register: existing_users

- name: Create user "{{ item.id }}"
  uri:
    url: "{{ api_protocol }}://{{ ansible_host }}:{{ api_port }}/service/rest/v1/security/users"
    user: "{{ admin_username }}"
    password: "{{ admin_password }}"
    body: "{{ lookup('template','user.json.j2') }}"
    method: POST
    status_code: 200
    force_basic_auth: true
    headers:
      Content-Type: application/json
    body_format: json
  delegate_to: localhost
  run_once: true
  when:
    - item.status != "deleted"
    - item.id not in ( existing_users | community.general.json_query('json[*].userId'))

- name: Sync user "{{ item.id }}" setings
  uri:
    url: "{{ api_protocol }}://{{ ansible_host }}:{{ api_port }}/service/rest/v1/security/users/{{ item.id }}"
    user: "{{ admin_username }}"
    password: "{{ admin_password }}"
    body: "{{ lookup('template','user.json.j2') }}"
    method: PUT
    status_code: 204
    force_basic_auth: true
    headers:
      Content-Type: application/json
    body_format: json
  delegate_to: localhost
  run_once: true
  when:
    - item.status != "deleted"
    - item.id in ( existing_users | community.general.json_query('json[*].userId'))

- name: Delete user "{{ item.id }}"
  uri:
    url: "{{ api_protocol }}://{{ ansible_host }}:{{ api_port }}/service/rest/v1/security/users/{{ item.id }}"
    user: "{{ admin_username }}"
    password: "{{ admin_password }}"
    method: DELETE
    status_code: 204
    force_basic_auth: true
  delegate_to: localhost
  run_once: true
  when:
    - item.status == "deleted"
    - item.id in ( existing_users | community.general.json_query('json[*].userId'))
